@import '../mixins/mediaQueries';

/**
 * UTILS
 */

@mixin generate-padding($_i, $_unit, $_padding-too: false) {
    $_trueUnit: $_unit;

    @if ($_unit == \%) {
        $_trueUnit: '%';
    }

    $_class: '';

    @if ($_unit == px) {
        $_class: p-#{$_i};
    } @else {
        $_class: p-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: pv-#{$_i};
    } @else {
        $_class: pv-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-top: unquote('#{$_i}#{$_trueUnit}') !important;
        padding-bottom: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: pt-#{$_i};
    } @else {
        $_class: pt-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-top: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: pb-#{$_i};
    } @else {
        $_class: pb-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-bottom: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: ph-#{$_i};
    } @else {
        $_class: ph-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-left: unquote('#{$_i}#{$_trueUnit}') !important;
        padding-right: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: pl-#{$_i};
    } @else {
        $_class: pl-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-left: unquote('#{$_i}#{$_trueUnit}') !important;
    }

    @if ($_unit == px) {
        $_class: pr-#{$_i};
    } @else {
        $_class: pr-#{$_i}#{$_unit};
    }

    @include withMediaQueries($_class) {
        padding-right: unquote('#{$_i}#{$_trueUnit}') !important;
    }
}

@include generate-padding(auto, '');

// 0, 2, 4, 6, 8, 10

@for $_step from 0 through 5 {
    $_value: 2 * $_step;

    @include generate-padding($_value, px);
}

// -2, -4, -6, -8, -10

@for $_step from 1 through -5 {
    $_value: 2 * $_step;

    @include generate-padding($_value, px);
}

// 15, 20, 25, ..., 40, 45, 50

@for $_step from 3 through 10 {
    $_value: $_step * 5;

    @include generate-padding($_value, px);
}

// 60, 70, 80, 90, 100

@for $_step from 6 through 10 {
    $_value: $_step * 10;

    @include generate-padding($_value, px);
}

// 2, 4, 6, 8, 10
// % vw vh

@for $_step from 1 through 5 {
    $_value: $_step * 2;

    @each $_unit in \%, vw, vh {
        @include generate-padding($_value, $_unit);
    }
}

// 15, 20, 25, 30, ... 85, 90, 95, 100
// % vw vh

@for $_step from 3 through 20 {
    $_value: $_step * 5;

    @each $_unit in \%, vw, vh {
        @include generate-padding($_value, $_unit);
    }
}
